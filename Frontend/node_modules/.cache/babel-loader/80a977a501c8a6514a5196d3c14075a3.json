{"ast":null,"code":"export default {\n  data() {\n    return {\n      trackers: []\n    };\n  },\n\n  beforeCreate() {\n    let self = this;\n    fetch(\"http://localhost:5000/api/user/\" + self.$store.state.user, {\n      method: 'GET',\n      headers: {\n        \"A-T\": self.$Ciphers.decode(\"Vigenere Cipher\", self.$cookies.get(\"user\") || \"\", [\"Pwd\"]).split(\";\")[1] || \"\"\n      }\n    }).then(response => {\n      // console.log(response)\n      if (response.ok && !response.redirected) {\n        return response.json();\n      } else {\n        throw {\n          'e_code': response.status,\n          'error': response.statusText\n        };\n      }\n    }).then(data => {\n      for (let i of data.trackers) {\n        self.trackers.push(i);\n      }\n    }).catch(rej => {\n      console.log(rej.error + ' kindly re-login');\n      self.$router.push('/login'); //remember\n    });\n  },\n\n  mounted() {\n    console.log(this);\n    this.prototype.filter('capitalize', function (value) {\n      if (!value) return '';\n      value = value.toString();\n      return value.charAt(0).toUpperCase() + value.slice(1);\n    });\n  }\n\n};","map":{"version":3,"mappings":"AAgCA;EACAA;IACA;MACAC;IADA;EAGA,CALA;;EAMAC;IACA;IACAC;MACAC,aADA;MAEAC;QACA,gFACA,OADA,EACAC,KADA,CACA,GADA,EACA,CADA,KACA;MAFA;IAFA,GAMAC,IANA,CAMAC;MACA;MACA;QACA;MACA,CAFA,MAEA;QACA;UACA,yBADA;UAEA;QAFA;MAIA;IACA,CAhBA,EAgBAD,IAhBA,CAgBAP;MACA;QACAS;MACA;IACA,CApBA,EAoBAC,KApBA,CAoBAC;MACAC;MACAH,4BAFA,CAEA;IACA,CAvBA;EAwBA,CAhCA;;EAiCAI;IACAD;IACA;MACA;MACAE;MACA;IACA,CAJA;EAKA;;AAxCA","names":["data","trackers","beforeCreate","fetch","method","headers","split","then","response","self","catch","rej","console","mounted","value"],"sourceRoot":"src/components","sources":["DashHome.vue"],"sourcesContent":["<template>\n<div class=\"trackers\">\n\t<table class='table table-bordered tracker_table'>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th>S.no</th>\n\t\t\t\t<th>Tracker name (last log time)</th>\n\t\t\t\t<th>Tracker description</th>\n\t\t\t\t<th>Add new log</th>\n\t\t\t\t<th>Actions</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody v-for=\"(t,index) in trackers\" :key='t.tracker_id'>\n\t\t\t<tr>\n\t\t\t\t<td>{{index}}</td>\n\t\t\t\t<td><a :href=\"'/tracker/'+t.tracker_id\">{{t.tracker_name}}</a> <span v-if=\"t.last_updated\">({{t.last_updated}})</span><span v-else> (-/-/- -:-:-)</span></td>\n\t\t\t\t<td>{{t.tracker_description}}</td>\n\t\t\t\t<td><a :href=\"'/'+t.tracker_id+'/log/add'\">{{t.tracker_type}}+</a></td>\n\t\t\t\t<td>\n\t\t\t\t\t<button type=\"button\" value=\"edit\"><a :href=\"'/tracker/'+t.tracker_id+'/update'\">Edit</a></button>\n\t\t\t\t\t<button type=\"button\" value=\"delete\"><a :href=\"'/tracker/'+t.tracker_id+'/delete'\">Delete</a></button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t<div class=\"text-center\">\n\t\t<button class=\"button\" type=\"button\" name=\"button\"><a class=\"h4\" href=\"/tracker/add\">Add Tracker</a> </button>\n\t</div>\n</div>\n</template>\n\n<script>\nexport default {\n\tdata() {\n\t\treturn {\n\t\t\ttrackers: []\n\t\t}\n\t},\n\tbeforeCreate() {\n\t\tlet self = this\n\t\tfetch(\"http://localhost:5000/api/user/\" + (self.$store.state.user), {\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\t\"A-T\": self.$Ciphers.decode(\"Vigenere Cipher\", self.$cookies.get(\"user\") || \"\",\n\t\t\t\t\t[\"Pwd\"]).split(\";\")[1] || \"\"\n\t\t\t}\n\t\t}).then((response) => {\n\t\t\t// console.log(response)\n\t\t\tif(response.ok && !response.redirected) {\n\t\t\t\treturn response.json()\n\t\t\t} else {\n\t\t\t\tthrow {\n\t\t\t\t\t'e_code': response.status,\n\t\t\t\t\t'error': response.statusText\n\t\t\t\t}\n\t\t\t}\n\t\t}).then((data) => {\n\t\t\tfor(let i of data.trackers) {\n\t\t\t\tself.trackers.push(i)\n\t\t\t}\n\t\t}).catch(rej => {\n\t\t\tconsole.log(rej.error + ' kindly re-login')\n\t\t\tself.$router.push('/login') //remember\n\t\t})\n\t},\n\tmounted() {\n\t\tconsole.log(this)\n\t\tthis.prototype.filter('capitalize', function(value) {\n\t\t\tif(!value) return ''\n\t\t\tvalue = value.toString()\n\t\t\treturn value.charAt(0).toUpperCase() + value.slice(1)\n\t\t})\n\t}\n}\n</script>\n\n<style scoped>\n.table {\n\tbox-shadow: 0 6px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.1);\n\tbackground-color: #8bf7ed38;\n\tborder-radius: 15px;\n\tborder: hidden;\n}\n\nbutton {\n\tbox-shadow: 0 6px 8px 0 rgba(0, 0, 0, 0.05), 0 6px 5px 0 rgba(0, 0, 0, 0.05);\n\tborder-radius: 10px;\n}\n\na {\n\ttext-decoration: none;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}